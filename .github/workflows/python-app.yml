name: Python application CI

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - uses: actions/checkout@v4

      # 2. Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      # 3. Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          
          # Install main dev/test tools
          pip install flake8 pytest
          
          # Install known top-level libs
          pip install spacy sentence-transformers nltk
          
          # If a requirements.txt file exists, install from it
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          fi
          
          # Download spacy + nltk data (or only specific models)
          python -m spacy download en_core_web_sm
          python -m nltk.downloader all

      # 5. Lint with flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings (so the workflow doesn't fail)
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
