name: Python application CI

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main"  ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # 3. Upgrade pip & install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # If you use a requirements.txt for the main libs:
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          # Or explicitly install certain libraries if not in requirements.txt
          # pip install streamlit spacy nltk sentence-transformers

      # 4. Download spaCy model & NLTK data so tests won't fail
      - name: Download spaCy & NLTK data
        run: |
          python -m spacy download en_core_web_sm
          python -c "import nltk; 
          nltk.download('punkt_tab', quiet=True);
          nltk.download('punkt', quiet=True);
          nltk.download('wordnet', quiet=True);
          nltk.download('averaged_perceptron_tagger', quiet=True)"

      # 5. Lint
      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. 
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      
      # 6. Build static site (example step)
      - name: Build static site
        run: |
          # In a real scenario, you might run something like:
          # sphinx-build docs build/
          # or mkdocs build
          # or something that produces HTML in a folder
          mkdir -p build
          echo "<html><h1>My Static Site</h1></html>" > build/index.html

      # 7. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: ${{ success() }}  # Only deploy if all prior steps succeeded
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

